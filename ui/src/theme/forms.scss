@import './_palette';
@import './_variables';
@import './_mixins';


/*
Json schema form
*/

.formHelp {
    display: none;
}

.form-control {
    &.ng-invalid.ng-touched {
        @include component-validation-state("valid", $form-feedback-valid-color);
    }
    &.ng-valid.ng-touched {
        @include component-validation-state("valid", $form-feedback-valid-color);
    }
}

/* end json schema form */

.form-section {
    padding-left: $grid-gutter-width;
    padding-right: $grid-gutter-width;

    &:not(:first-child) {
        border-left: 1px solid $hr-border-color;
    }

    .btn-link {
        &:focus {
            outline: -webkit-focus-ring-color auto 5px;
        }
    }

    .form-check-label {
        &:focus {
            outline: -webkit-focus-ring-color auto 5px;
        }
    }
}

.custom-control {
    &.custom-control-reverse {
        padding-right: 1.5em;
        padding-left: 0;

        & > .custom-control-label {
            position: static;
            &::after, &::before {
                right: 0px;
                left: auto;
            }
        }
    }
}

.custom-file {
    & > .custom-file-control {
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
    }
}

.component-control {
    @include component-validation-state("valid", $form-feedback-valid-color);
    @include component-validation-state("invalid", $form-feedback-invalid-color);
}

.codearea {
    white-space: pre-wrap;
    resize: vertical;
    font-family: monospace;
    min-height: 166px;
    margin-bottom: 0px;
}

@media only screen and (max-width: 1200px) {
    .form-section:not(:first-child) {
        border-left: 0px;
    }
}
